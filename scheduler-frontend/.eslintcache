[{"D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\index.js":"1","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\Routes.js":"2","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\Home.js":"3","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\Base.js":"4","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\Menu.js":"5","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\About.js":"6","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\ScheduleForm.js":"7","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\helper\\coreapicalls.js":"8"},{"size":160,"mtime":1612359077683,"results":"9","hashOfConfig":"10"},{"size":535,"mtime":1612422536264,"results":"11","hashOfConfig":"10"},{"size":3553,"mtime":1612447544553,"results":"12","hashOfConfig":"10"},{"size":846,"mtime":1612422155206,"results":"13","hashOfConfig":"10"},{"size":827,"mtime":1612429206541,"results":"14","hashOfConfig":"10"},{"size":1695,"mtime":1612422327839,"results":"15","hashOfConfig":"10"},{"size":3397,"mtime":1612448288361,"results":"16","hashOfConfig":"10"},{"size":1257,"mtime":1612450556805,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vmur0b",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\index.js",[],["38","39"],"D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\Routes.js",[],"D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\Home.js",["40","41","42"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles.css\";\r\nimport Base from \"./Base\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { getSlots, addSlotToStorage } from \"./helper/coreapicalls\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [appointmentDate, setAppointmentDate] = useState(new Date());\r\n  const [slots, setSlots] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const loadAllSlots = () => {\r\n    getSlots(\r\n      `${appointmentDate.getYear() + 1900}-${(\r\n        \"0\" +\r\n        (appointmentDate.getMonth() + 1)\r\n      ).slice(-2)}-${(\"0\" + appointmentDate.getDate()).slice(-2)}`\r\n    ).then((data) => {\r\n      if (data.error) {\r\n        setError(data.error);\r\n      } else {\r\n        console.log(data);\r\n        let slotTemp = [\r\n          { time: \"9\", available: true },\r\n          { time: \"10\", available: true },\r\n          { time: \"11\", available: true },\r\n          { time: \"12\", available: true },\r\n          { time: \"1\", available: true },\r\n          { time: \"2\", available: true },\r\n          { time: \"3\", available: true },\r\n          { time: \"4\", available: true },\r\n        ];\r\n        setSlots(\r\n          slotTemp.map((s) => {\r\n            for (const item of data) {\r\n              if (s.time === item.slotTime) {\r\n                s.available = false;\r\n              }\r\n            }\r\n            return s;\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllSlots();\r\n  }, [appointmentDate]);\r\n\r\n  const slotsList = () => {\r\n    return (\r\n      <div class=\"list-group\">\r\n        {slots.map((slot) => {\r\n          if (slot.available) {\r\n            return (\r\n              <Link\r\n                to=\"/schedule\"\r\n                class=\"list-group-item list-group-item-action\"\r\n                onClick={() => {\r\n                  addSlotToStorage(\r\n                    {\r\n                      slotTime: slot.time,\r\n                      slotDate: `${appointmentDate.getYear() + 1900}-${(\r\n                        \"0\" +\r\n                        (appointmentDate.getMonth() + 1)\r\n                      ).slice(-2)}-${(\"0\" + appointmentDate.getDate()).slice(-2)}`,\r\n                    }\r\n                  );\r\n                }}\r\n              >\r\n                {slot.time}\r\n              </Link>\r\n            );\r\n          } else {\r\n            return (\r\n              <Link\r\n                to=\"/schedule\"\r\n                class=\"list-group-item list-group-item-action bg-warning disabled\"\r\n                tabindex=\"-1\"\r\n                aria-disabled=\"true\"\r\n              >\r\n                {slot.time}\r\n              </Link>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base\r\n      title=\"Appointment Scheduler\"\r\n      desciption=\"A MERN Stack based Appointment Scheduler application.\"\r\n      className=\"container\"\r\n    >\r\n      <div className=\"row text-center\">\r\n        <div class=\"card text-center\">\r\n          <div class=\"card-header\">Select A Date</div>\r\n          <div class=\"card-body\">\r\n            <div ClassName=\"row\">\r\n              <DatePicker\r\n                selected={appointmentDate}\r\n                onChange={(date) => setAppointmentDate(date)}\r\n                isClearable\r\n                placeholderText=\"I have been cleared!\"\r\n              />\r\n            </div>\r\n            {slotsList()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\Base.js",[],"D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\Menu.js",[],"D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\About.js",["43"],"import React from \"react\";\r\nimport \"../styles.css\";\r\nimport Base from \"./Base\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Base\r\n      title=\"Appointment Scheduler\"\r\n      desciption=\"A MERN Stack based Appointment Scheduler application.\"\r\n      className=\"container\"\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card mb-4\">\r\n            <h4 className=\"card-header text-center\">Author Information</h4>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                <span className=\"badge badge-primary mr-2\">Name:</span>\r\n                Kshitij Bharde\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <span className=\"badge badge-primary mr-2\">Email:</span>\r\n                kshitij.bharde@tutanota.com\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <span className=\"badge badge-primary mr-2\">Github:</span>\r\n                <a href=\"https://github.com/kshitijBharde\">https://github.com/kshitijBharde</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <span className=\"badge badge-primary mr-2\">LinkedIn:</span>\r\n                <a href=\"https://www.linkedin.com/in/kshitijbharde/\">https://www.linkedin.com/in/kshitijbharde/</a>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <span className=\"badge badge-primary mr-2\">Contact No:</span>\r\n                +918788807027\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\ScheduleForm.js",["44"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"./Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bookAppointment, getAppointmentFromStorage } from \"./helper/coreapicalls\";\r\n\r\nconst ScheduleForm = () => {\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    slots: {\r\n        slotTime: \"\",\r\n        slotDate: \"\"\r\n    },\r\n    error: \"\",\r\n    success: false\r\n  });\r\n\r\n  const {name, email, phone, slots, error, success} = values;\r\n\r\n  const handleChanges = name => event => {\r\n    setValues({...values, error: false, [name]: event.target.value});\r\n  };\r\n\r\n  useEffect(() => {\r\n    let appointment = getAppointmentFromStorage();\r\n    appointment.error = \"\";\r\n    appointment.success = false;\r\n    setValues(appointment);\r\n  }, []);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({...values, error: false});\r\n    bookAppointment({name, email, phone, slots})\r\n    .then(data => {\r\n      if (data.error) {\r\n        setValues({...values, error: data.error, success: false});\r\n      } else {\r\n        setValues({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            slots: {\r\n                slotTime: \"\",\r\n                slotDate: \"\"\r\n            },\r\n            error: \"\",\r\n            success: true\r\n          });\r\n      }\r\n    })\r\n    .catch(console.log(\"Error in booking the appoitment.\"));\r\n  };\r\n\r\n  const appointmentForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"my-2 text-dark\">Name:</label>\r\n              <input className=\"form-control\" onChange={handleChanges(\"name\")} type=\"text\" value = {name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"my-2 text-dark\">Email:</label>\r\n              <input className=\"form-control\" onChange={handleChanges(\"email\")} type=\"email\" value = {email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"my-2 text-dark\">Phone:</label>\r\n              <input className=\"form-control\" onChange={handleChanges(\"phone\")} type=\"text\" value = {phone} />\r\n            </div>\r\n            <button onClick={onSubmit} className=\"my-3 form-control btn btn-primary btn-block\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n      <div className=\"col-md-6 offset-sm-3 text-left\">\r\n    <div className=\"alert alert-success\" style={{display: success ? \"\" : \"none\"}}>\r\n      Booked the appointment successfully\r\n    </div>\r\n    </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n      <div className=\"col-md-6 offset-sm-3 text-left\">\r\n    <div className=\"alert alert-danger\" style={{display: error ? \"\" : \"none\"}}>\r\n      {error}\r\n    </div>\r\n    </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Booking An Appointment\" desciption=\"Please fill out the details to finalize appointment.\">\r\n      {successMessage()}\r\n      {errorMessage()}\r\n      {appointmentForm()}\r\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default ScheduleForm;\r\n","D:\\work\\appointment-scheduler-app\\scheduler-frontend\\src\\core\\helper\\coreapicalls.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":16,"nodeType":"51","messageId":"52","endLine":7,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":12,"column":10,"nodeType":"51","messageId":"52","endLine":12,"endColumn":15},{"ruleId":"54","severity":1,"message":"55","line":51,"column":6,"nodeType":"56","endLine":51,"endColumn":23,"suggestions":"57"},{"ruleId":"49","severity":1,"message":"58","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"58","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadAllSlots'. Either include it or remove the dependency array.","ArrayExpression",["61"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [appointmentDate, loadAllSlots]",{"range":"64","text":"65"},[1570,1587],"[appointmentDate, loadAllSlots]"]